# scan.yml
on: [push, pull_request]

name: Build and Scan
env:
  # The Prisma Cloud user with the CI User role
  TL_USER: ${{ secrets.TL_USER }}
  # The password for this user account
  TL_PASS: ${{ secrets.TL_PASS }}
  # The base URL for the Console -- http://console.<my_company>.com:8083 -- without a trailing /
  TL_CONSOLE_URL: https://52.78.4.73:8083
  CONTAINER_IMAGE: nancom21/testpublic:${{ github.sha }}

jobs:
  build-and-scan:
    name: Build and Scan for Vulnerabilities and Compliance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Download twistcli from Prisma Cloud Console
      run: |
        curl -k -u $TL_USER:$TL_PASS --output ./twistcli https://52.78.4.73:8083/api/v1/util/twistcli
        # ...and ensure it's executable.
        sudo chmod a+x ./twistcli
        echo ===== Twistcli ready =====
        ./twistcli
     
    - name: Build and tag the image
      run: docker build -f ./docker_files/Dockerfile.linux.amd64 -t $CONTAINER_IMAGE .

    - name: Scan the image
      run: |
          # Run the scan with twistcli pushing the results to the Prisma Cloud console. --details returns all vulnerabilities & compliance
          # issues rather than just summaries. -address points to our Prisma Cloud console -u and -p provide credentials for the console.
          # These creds only need the CI User role. Finally, we provide the name of the image we built with 'docker build', above.
          docker images
          echo ===== Scanning Image $CONTAINER_IMAGE =====
          ./twistcli images scan -address $TL_CONSOLE_URL -u $TL_USER -p $TL_PASS $CONTAINER_IMAGE
          # Add --vulnerability-threshold and/or --compliance-threshold to this command to fail builds based on the thresholds. See twistcli
          # documentation for more details.
 # add any additional jobs/steps needed to test the image, push to a registry, etc. 

    - name: Docker login
      run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
    - name: Push the image to Docker Hub
      run: docker push $CONTAINER_IMAGE
    
