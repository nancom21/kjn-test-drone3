kind: pipeline
type: docker
name: default

steps:
- name: build
  environment:
    TL_USER: twistcli
    TL_PASS: twistcli
    TL_CONSOLE_URL: https://15.165.165.185:8083
  image: golang:1.13
  commands:
  - uname -a
  - ls -al 
  - whoami
  
  #- curl -k -u $TL_USER:$TL_PASS --output ./twistcli https://15.165.165.185:8083/api/v1/util/twistcli
  #- chmod a+x ./twistcli
  #- echo ===== Twistcli ready to scan ${DRONE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8} =====
  # - ./twistcli images scan -address https://15.165.165.185:8083 -u twistcli -p twistcli --containerized --details ${DRONE_BRANCH//\//-}-${DRONE_COMMIT_SHA:0:8}

- name: slack
  image: plugins/slack
  settings:
    webhook: 
      from_secret: slack_webhook
    channel: naver-kjn-drone
    #    username: nancom21@naver.com
    template: >
      {{#success build.status}}
        build {{build.number}} status: *{{build.status}}*
        build link: {{build.link}}
        build author: {{build.author}}
        build ref: {{build.ref}}
        build event: {{build.event}}
        build commit: {{build.commit}}
        build branch: {{build.branch}}
        build deploy: {{build.deployTo}}
      {{else}}
        build {{build.number}} failed. Fix me please.
      {{/success}}
      #http://plugins.drone.io/drone-plugins/drone-slack/
#- name: send
#  image: plugins/webhook
#  settings:
#    urls: https://15.165.165.185:8083/api/v1/coderepos/webhook/G0NmFXKHWfKK0S4_PlhywzqVaeo=

- name: publish
  image: plugins/docker
  settings:
    username: 
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: nancom21/testpublic
#    repo: nancom21/kjn-test-drone3
    auto_tag: true
    auto_tag_suffix: drone-build
#    dockerfile: docker_files/Dockerfile.linux.amd64

 - name: Scan the image
      commands:
          ls -an
          uname -a   
          echo ===== Scanning Image =====
          ./twistcli images scan -address $TL_CONSOLE_URL -u $TL_USER -p $TL_PASS --containerized $CONTAINER_IMAGE




